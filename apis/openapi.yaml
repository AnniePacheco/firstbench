openapi: 3.0.3
info:
  version: '0.1'
  title: First Bench API
  description: 'API for First bench administration interfaces '
  termsOfService: 'Syntax interview assesment - Ana Pacheco'
  contact:
    name: First Bench API 
    url: 'https://gitlab.com/AnnieP'
    email: it28pachecoanne@gmail.com  
servers:
  - url: /api/v1
    description: Local instance
paths:
  /resources:
    get:
      tags:
        - Resource Management
      summary: Retrieve all resources
      description: Retrieve the information of all resources.
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/range'
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
    post:
      summary: Create new resource
      tags:
        - Resource Management
      responses:
        '200':
          description: OK
        '400':
          description: Missing Required Information
      description: Create a new resource.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCreate'
  '/resources/{id}':
    get:
      tags:
        - Resource Management
      summary: Retrieve resource by id
      description: Retrieve the information of the resource with the specified id.
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
    put:
      tags:
        - Resource Management
      summary: Update resource by key
      description: Updates the resource with the specified id.
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Resource Management
      summary: Delete resource by key
      description: Delete a resource with the specified ID.
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /personas:
    get:
      tags:
        - Persona Management
      summary: Retrieve all personas
      description: Get all personas.
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/range'
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Persona'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
    post:
      summary: Create new persona
      tags:
        - Persona Management
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona'
        '400':
          description: Missing Required Information
      description: Creates a new persona.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonaCreate'
  '/personas/{id}':
    get:
      tags:
        - Persona Management
      summary: Retrieve persona by id
      description: Retrieve the information of the persona with the matching persona ID.
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona'
    put:
      summary: Update persona by id
      tags:
        - Persona Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona'
      description: Updates the persona with the given id.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona'
    delete:
      summary: Delete persona by id
      description: Deletes the persona with the given id.
      tags:
        - Persona Management
      responses:
        '204':
          description: No Content
        '400':
          description: Cannot delete persona as it is associated with an assistant
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/id'
  '/rag-indexing/{resource_id}':
    delete:
      tags:
        - Files Management
      summary: Delete all files by assistant id
      description: Delete all files.
      operationId: backend.api.RagIndexingView.delete
      parameters:
        - $ref: '#/components/parameters/resource_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDelete'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
    get:
      tags:
        - Files Management
      summary: Retrieve all files by assistant id
      description: Get all files.
      operationId: backend.api.RagIndexingView.search
      parameters:
        - $ref: '#/components/parameters/resource_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
    post:
      tags:
        - Files Management
      summary: Create new rag-indexing
      description: A pipeline for ingesting data from a source and indexing it. This knowledge will be associated with an assistant id alias channelId type assistant.
      parameters:
        - $ref: '#/components/parameters/resource_id'
      requestBody:
        description: Post the necessary fields for the API to index documents.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IndexCreate'
      responses:
        '200':
          description: Document added
        '400':
          description: Missing Required Information        
  /messages:
    post:
      summary: Create new message
      tags:
        - Message Management
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Missing Required Information
      description: Creates a new message.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageCreate'
  /conversations:
    get:      
      tags:
        - Conversation Management
      summary: Retrieve all conversations.
      description: Get all conversations.
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/range'
        - $ref: '#/components/parameters/filter'
      operationId: backend.api.ConversationsView.search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conversations'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
  '/conversations/{id}':
    get:
      tags:
        - Conversation Management
      summary: Retrieve conversation by id
      description: Retrieve the information of the conversation with the matching conversation ID.
      operationId: backend.api.ConversationsView.get
      parameters:
        - $ref: '#/components/parameters/id'      
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
    put:
      summary: Update conversation by id
      tags:
        - Conversation Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
      description: Updates the conversation with the given id.
      operationId: backend.api.ConversationsView.put
      parameters:
        - $ref: '#/components/parameters/id'      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationUpdate'
    delete:
      summary: Delete conversation by id
      description: Deletes the conversation with the given id.
      operationId: backend.api.ConversationsView.delete
      parameters:
        - $ref: '#/components/parameters/id'
      tags:
        - Conversation Management
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  '/conversations/{resource_id}':
    post:
      summary: Create new conversation
      tags:
        - Conversation Management
      operationId: backend.api.ConversationsView.post
      parameters:
        - $ref: '#/components/parameters/resource_id'            
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
        '400':
          description: Missing Required Information
      description: Creates a new conversation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationCreate'
  /voices:
    get:
      summary: Retrieve all the xi_labs voices
      tags:
        - Voice Management
      description: Retrieve the information of all the xi_labs voices
      operationId: backend.api.VoicesFacesView.search
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/range'
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voice'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
    post:
      summary: Create new voice message.
      description: Creates a new voice message
      operationId: backend.api.VoicesFacesView.post
      tags:
        - Voice Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  chat_response:
                    type: string
                    description: The chat response message.
          headers:
            Content-Disposition:
              description: Indicates that the response includes an attachment.
              schema:
                type: string
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceMessage'
        '206':
          description: Partial Content (MP3 file streamed)
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Indicates that the response includes an attachment.
              schema:
                type: string
        '400':
          description: Missing Required Information      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceMessageCreate'
  '/voices/{id}':
    delete:
      summary: Delete voice message by id
      description: Deletes the voice message with the given id.
      operationId: backend.api.VoicesFacesView.delete
      tags:
        - Voice Management
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  '/ocr-indexing/{resource_id}':
    post:
      tags:
        - OCR Management
      summary: Create new rag-indexing
      description: A pipeline for ingesting data from a source and indexing it. This knowledge will be associated with an assistant id alias channelId type assistant.
      parameters:
        - $ref: '#/components/parameters/resource_id'
      requestBody:
        description: Post the necessary fields for the API to index documents.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocsPathsCreate'
      responses:
        '200':
          description: Document added
        '400':
          description: Missing Required Information
tags:
  - name: Persona Management
    description: Configuration of persona's expertise and personality
  - name: Resource Management
    description: Discover ollama models and configuration of assistants  
  - name: Files Management
    description: Indexing of files to create a knowledge base
  - name: OCR Management
    description: Extraction of text from pdf images
  - name: Message Management
    description: Management of messages in a conversation
  - name: Conversation Management
    description: Management of conversations in a chat bot
  - name: Voice Management
    description: Configuration of xi_labs voices

components:
  headers:
    X-Total-Count:
      description: The total number of items
      schema:
        type: integer
      required: true
  parameters:
    id:
      name: id
      in: path
      description: id of the object
      required: true
      schema:
        $ref: '#/components/schemas/uuid4'
    key:
      name: key
      in: path
      description: key for config item
      required: true
      schema:
        type: string
        example: api_key
        pattern: '^[a-zA-Z0-9_]+$'
    sort:
      name: sort
      in: query
      description: 'Specifies the sorting order and field (e.g., ["title", "ASC"]).'
      required: false
      schema:
        type: string
        example: '["title","ASC"]'
    range:
      name: range
      in: query
      description: 'Specifies the range of results to return (e.g., [0, 24]).'
      required: false
      schema:
        type: string
        example: '[0, 24]'
    filter:
      name: filter
      in: query
      description: 'JSON string specifying the filter conditions (e.g., {"title":"bar"}).'
      required: false
      schema:
        type: string
        example: '{"title":"bar"}'
    resource_id:
      name: resource_id
      in: path
      description: this refers to the assitant id for the resource
      required: true
      schema:
        $ref: '#/components/schemas/uuid4'    
  schemas:
    uuid4:
      type: string
      format: uuid
      example: 7bea4732-214f-40e7-9161-4e7241a2b97e
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
    uuid4ReadOnly:
      type: string
      format: uuid
      readOnly: true
      example: 7bea4732-214f-40e7-9161-4e7241a2b97e
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
    uri:
      type: string
      format: uri
      example: 'https://localhost:8080/v1/api'
      pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$
    email:
      type: string
      format: email
      example: it28pachecoanne@gmail.com
      pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
    name:
      type: string
      example: El profesor
      pattern: ^[A-Za-z0-9\s\-_,.;:()!@#$%&*+=?\/\\|~^'"\[\]{}áéíóúñ©€£¥]+$
    textShort:
      type: string
      example: Lorem Ipsum
      pattern: ^[A-Za-z0-9\s\-_,.;:()!@#$%&*+=?\/\\|~^'"\[\]{}áéíóúñ©€£¥]+$
    textLong:
      type: string
      example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
      pattern: ^[A-Za-z0-9\s\-_,.;:()!@#$%&*+=?¡¿\/\\|~^'"\[\]{}áéíóúñ©€£¥]+$
    bytes:
      type: integer
      description: Bytes
      example: 7702565088
    relativePath:
      type: string
      description: A uri-style relative path that is valid on macOS, Windows, and Linux
      example: folder/subfolder/file.txt
      pattern: '^(?![./])[^\0<>:;,?"*|]+(?:/[^\0<>:;,?"*|]+)*$'
    fileName:
      type: string
      description: A filename that is valid on macOS, Windows, and Linux
      example: Mistral-7B-Instruct-v0.3-Q8_0.gguf
      pattern: '^[^<>:;,?"*|/]+$'
    boolean_str:
      type: string
      example: 'True'
      pattern: ^True|False$
    timestamp:
      type: string
      format: date-time
      example: "2023-07-29T12:34:56Z"
      pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$    
    voice_image_url:
      type: string      
      example: '/voice-icon.png'
      pattern: ^\/.*\.png$
    sample_mp3_url:
      type: string      
      example: '/Laura.mp3'
      pattern: ^\/.*\.mp3$
    Resource:
      type: object
      title: Resource
      description: Resources (input/output)
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        name:
          $ref: '#/components/schemas/name'
        uri:
          $ref: '#/components/schemas/uri'
          nullable: true
        description:
          $ref: '#/components/schemas/textLong'
          nullable: true
        resource_llm_id:
          $ref: '#/components/schemas/uuid4'
          nullable: true
        persona_id:
          $ref: '#/components/schemas/uuid4'
          nullable: true
        status:
          type: string
          nullable: true
          enum:
            - public
            - draft
            - private
          example: public
        allow_edit:
          nullable: true
          $ref: '#/components/schemas/boolean_str'
        kind:
          type: string
          enum:
            - llm
            - assistant 
          example: assistant
        icon:
          nullable: true
          $ref: '#/components/schemas/uri'
        active:
          nullable: true
          $ref: '#/components/schemas/boolean_str'          
    ResourceCreate:
      type: object
      title: ResourceCreate
      description: Resources (input/output)
      properties:
        name:
          $ref: '#/components/schemas/name'
        uri:
          $ref: '#/components/schemas/uri'
        description:
          $ref: '#/components/schemas/textLong'
        resource_llm_id:
          $ref: '#/components/schemas/uuid4'
        persona_id:
          $ref: '#/components/schemas/uuid4'        
        status:
          type: string
          enum:
            - public
            - draft
            - private
          example: public
        allow_edit:
          $ref: '#/components/schemas/boolean_str'
        kind:
          type: string
          enum:
            - llm
            - assistant 
          example: assistant
        icon:
          $ref: '#/components/schemas/uri' 
        active:
          nullable: true
          $ref: '#/components/schemas/boolean_str'           
      required:
        - name
        - kind
    Persona:
      type: object
      title: Persona
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        name:
          $ref: '#/components/schemas/name'
        description:
          $ref: '#/components/schemas/textLong'
        voice_id:
          $ref: '#/components/schemas/uuid4'
        face_id:
          $ref: '#/components/schemas/uuid4'
      required:
        - name
    PersonaCreate:
      type: object
      title: PersonaCreate
      description: Persona without id which is server-generated.
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        name:
          $ref: '#/components/schemas/name'
        description:
          $ref: '#/components/schemas/textLong'
        voice_id:
          $ref: '#/components/schemas/uuid4'
        face_id:
          $ref: '#/components/schemas/uuid4'
      required:        
        - name
    Voice:
      type: object
      title: Voice
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        xi_id:
          $ref: '#/components/schemas/textShort'
        name:
          $ref: '#/components/schemas/textShort'
        text_to_speak:
          type: string
          nullable: true
        image_url:
          $ref: '#/components/schemas/voice_image_url'
          nullable: true
        sample_url:
          $ref: '#/components/schemas/sample_mp3_url'
          nullable: true
    VoiceCreate:
      type: object
      title: VoiceCreate
      description: Voice without id which is server-generated.
      properties:
        xi_id:
          $ref: '#/components/schemas/textShort'
        name:
          $ref: '#/components/schemas/textShort'
      properties:
        xi_id:
          $ref: '#/components/schemas/textShort'
        name:
          $ref: '#/components/schemas/textShort'
        text_to_speak:
          type: string
          nullable: true
    VoiceMessage:
      type: object
      title: VoiceMessage
      properties:
        audio_msg_path:
          type: string
          format: uri
          nullable: true
      required:
        - audio_msg_path
    VoiceMessageCreate:
      type: object
      title: VoiceMessageCreate
      description: Voice without id which is server-generated.
      properties:
        msg_id:
          $ref: '#/components/schemas/uuid4'                     
      required:
        - msg_id        
    Face:
      type: object
      title: Face
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        name:
          $ref: '#/components/schemas/textShort'
      required:
        - id
        - name
    Message:
      type: object
      title: Message
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        assistant_id:
          $ref: '#/components/schemas/uuid4'
        conversation_id:
          $ref: '#/components/schemas/uuid4'
        timestamp:
          $ref: '#/components/schemas/timestamp'
        prompt:
          $ref: '#/components/schemas/textLong'
        chat_response:
          type: string
        voice_active:
          $ref: '#/components/schemas/boolean_str'
          nullable: true
      required:
        - assistant_id
        - conversation_id
        - timestamp
        - prompt
        - chat_response
    MessageCreate:
      type: object
      title: MessageCreate
      description: Message of a conversation.
      properties:
        assistant_id:
          $ref: '#/components/schemas/uuid4'
        conversation_id:
          $ref: '#/components/schemas/uuid4'
          nullable: true
        prompt:
          $ref: '#/components/schemas/textLong'
        voice_active:
          $ref: '#/components/schemas/boolean_str'
      required:        
        - assistant_id
        - prompt
    Conversation:
      type: object
      title: Conversation
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        name:
          $ref: '#/components/schemas/textShort'
        created_timestamp:
          $ref: '#/components/schemas/timestamp'
        last_updated_timestamp:
          $ref: '#/components/schemas/timestamp'
        archive:
          $ref: '#/components/schemas/boolean_str'
        assistant_id:
          $ref: '#/components/schemas/uuid4'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
      required:        
        - name        
        - archive
    Conversations:
      type: object
      title: Conversations
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        name:
          $ref: '#/components/schemas/textShort'
        created_timestamp:
          $ref: '#/components/schemas/timestamp'
        last_updated_timestamp:
          $ref: '#/components/schemas/timestamp'
        archive:
          $ref: '#/components/schemas/boolean_str'
        assistant_id:
          $ref: '#/components/schemas/uuid4'
      required:        
        - name        
        - archive        
    ConversationCreate:
      type: object
      title: ConversationCreate
      description: Conversation without id which is server-generated.
      properties:
        name:
          $ref: '#/components/schemas/textLong'
        archive:
          $ref: '#/components/schemas/boolean_str'                
      required:        
        - name
    ConversationUpdate:
      type: object
      title: ConversationUpdate
      description: Conversation to be updated by id.
      properties:
        name:
          $ref: '#/components/schemas/textLong'
        archive:
          $ref: '#/components/schemas/boolean_str'                
      required:        
        - name
        - archive
    IndexCreate:
      type: object
      title: IndexCreate
      description: Upload files to indexig
      properties:
        files:
          type: array
          items:
            format: binary
            description: The file to upload
      required:
        - files
    File:
      type: object
      title: File
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        name:
          $ref: '#/components/schemas/name'
    FileDelete:
      type: object
      title: FilesDelete
      properties:
        file_ids:
          type: array
          items:
            $ref: '#/components/schemas/uuid4'
    DocsPathsCreate:
      type: object
      title: DocsPathsCreate
      description: Conversation without id which is server-generated.
      properties:
        docs_paths:
          type: array
          items:
            $ref: '#/components/schemas/textLong'                      
      required:        
        - docs_paths